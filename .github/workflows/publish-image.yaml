name: Build and Publish Image

on:
  # Automatically run CI on Release and Pre-Release tags and main branch
  # (only if there are changes to relevant paths)
  push:
#    tags:
#    branches:
#      - main

  # To make it possible to trigger e2e CI workflow for any arbitrary git ref
  workflow_dispatch:

jobs:
  release-rules:
    runs-on: ubuntu-latest
    outputs:
      release-type: ${{ steps.release-rules.outputs.release-type }}
    steps:
      - uses: actions/checkout@v2
      - id: release-rules
        uses: ./.github/actions/release-rules

  publish-webhook:
    # Automatically publish release and pre-release artifacts.
    #
    # As for dev releases, make it possible to publish artifacts
    # manually by approving 'deployment' in the 'manual' environment.
    #
    # Dev build can be released either from the 'main' branch or
    # by running this workflow manually with `workflow_dispatch` event.
    if: >-
      contains('release,pre-release', needs.release-rules.outputs.release-type)
        || ( github.event_name != 'pull_request' )
        || ( github.event.pull_request.head.repo.full_name == github.repository )
    environment: ${{ needs.release-rules.outputs.release-type == 'dev' && 'manual' || '' }}
    runs-on: ubuntu-latest
    needs:
      - release-rules
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "GITHUB_SHA_SHORT=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        id: build-image
        env:
          DOCKER_REGISTRY: ghcr.io
        run: |
          set -o pipefail
          
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [ "$VERSION" == "main" ] && VERSION=$(git describe --tags --always --first-parent)
          # Strip "v" prefix
          [[ "${VERSION}" == "v"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # If it's pull request the version string is prefixed by 0.0.0-
          [ ${{ github.event_name}} == "pull_request" ] && VERSION="${{ github.event.pull_request.head.sha }}"
          
          IMAGE_TAG="${{ env.DOCKER_REGISTRY }}/${{ github.repository }}:${VERSION}"
          echo "Building image with tag ${IMAGE_TAG}"
          docker build . -t ${IMAGE_TAG}
          docker push ${IMAGE_TAG}